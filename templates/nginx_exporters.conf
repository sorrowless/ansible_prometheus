server {
    listen {{ prometheus.exporters_reverse_proxy.port }} ssl;
    ssl_certificate /etc/ssl_certs/prometheus_exporters/fullchain.pem;
    ssl_certificate_key /etc/ssl_certs/prometheus_exporters/private.pem;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_prefer_server_ciphers   on;
    gzip on;
    charset utf-8;
    client_max_body_size 1M;
    keepalive_timeout 10;
    gzip_types *;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

{% for exporter in prometheus.exporters %}
{% if prometheus.exporters[exporter].enabled == true and exporter != 'grok_exporter' %}
    location /{{ prometheus.exporters[exporter].container_name }}_{{ prometheus.exporters[exporter].metrics_path }} {
        rewrite /{{ prometheus.exporters[exporter].container_name }}_{{ prometheus.exporters[exporter].metrics_path }} /metrics break;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:{{ prometheus.exporters[exporter].host_port }};
    }
{% elif exporter == 'grok_exporter' %}
  {%- for grok_instance in exporter.exporters %}
    location /{{ exporter }}_{{ grok_instance.name }} {
        rewrite /{{ exporter }}_{{ grok_instance.name }} /metrics break;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:{{ exporter.server.port }};
    }
  {% endfor %}
{% endif %}
{% endfor %}
}
